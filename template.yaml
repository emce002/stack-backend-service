# definicja 1 pełnego środowiska aplikacji, wszystkie elementy potrzebe do uruchomienia aplikacji

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Astro project deployment with S3 and CloudFront (No custom domain)

Parameters:
  ProjectName:
    Type: String
    Default: dev
    Description: The environment to deploy to (e.g., dev, prod)
  ClusterName:
    Type: String
    Description: The name of the ECS cluster
  VpcId:
    Type: String
    Description: The ID of the VPC where the ECS cluster will be created
  SubnetIds:
    Type: CommaDelimitedList
    Description: The IDs of the subnets where the ECS cluster will be created

Resources:

  BackendRepository:
    Type: AWS::ECR::Repository

  BackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: container-maciek-2
          Image: !GetAtt BackendRepository.RepositoryUri
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
              Protocol: tcp
          Essential: true
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: 1024
      Memory: 3072
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'

#  ECSService:
#    Type: 'AWS::ECS::Service'
#    DependsOn: LoadBalancerListener
#    Properties:
#      ServiceName: maciek-2-service
#      Cluster: !Ref ClusterName
#      DesiredCount: 1
#      LaunchType: FARGATE
#      NetworkConfiguration:
#        AwsvpcConfiguration:
#          AssignPublicIp: ENABLED
#          SecurityGroups:
#            - sg-0c32195644e09dc2f
#          Subnets: !Ref SubnetIds
#      TaskDefinition: !Ref BackendTaskDefinition
#      LoadBalancers:
#        - ContainerName: container-maciek-1
#          ContainerPort: 8080
#          TargetGroupArn: !Ref ALBTargetGroup

  # Application Load Balancer Resources
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets: !Ref SubnetIds
      Type: application
      IpAddressType: ipv4

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId
      HealthCheckPath: /api/info
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the ALB
      VpcId: vpc-036074a5823a1776f
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

#Outputs:
#  BackendRepositoryUri:
#    Description: URI of the ECR repository
#    Value: !GetAtt BackendRepository.RepositoryUri
#    Export:
#      Name: !Sub "${ProjectName}-BackendRepositoryUri"
#
#  BackendRepositoryName:
#    Description: Name of the ECR repository
#    Value: !Ref BackendRepository
#    Export:
#      Name: !Sub "${ProjectName}-BackendRepositoryName"

